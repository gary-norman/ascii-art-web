:root {
  --main-bg-grad: linear-gradient(155deg, rgb(14 6 42), rgb(1, 52, 37));
  --main-bg-clr: rgb(14, 6, 42);
  --card-bg: rgb(124, 124, 124);
  --accent: rgb(0, 128, 92);
  --text-clr-heading: rgb(231 237 241);
  --text-clr-dark: rgb(94, 94, 94);
  --text-clr-darker: rgb(48, 48, 48);
  --bg-clr-dark: var(--text-clr-dark);
  --text-clr-light: rgb(181, 181, 181);
  --bg-clr-light: var(--text-clr-heading);
  --txt-clr-hover-light: color-mix(in lab, var(--text-clr-light), rgb(255 255 255) 60%);
  --txt-clr-hover-dark: color-mix(in lab, currentColor, rgb(0 0 0) 70%);
    --svg-rotate-b: url(../icons/rotate-ccw.svg);
    --svg-rotate-w: url(../icons/rotate-ccw-white.svg);
    --svg-upload-b: url(../icons/upload.svg);
    --svg-upload-w: url(../icons/upload-white.svg);

    --svg-stroke-b: var(--text-clr-dark);
    --svg-stroke-w: var(--text-clr-light);

    --darkTogglePos-l: 28px;
    --darkTogglePos-r: 3px;
    --darkToggleStroke-b: var(--text-clr-darker);
    --darkToggleStroke-w: var(--text-clr-light);


/* dark mode */
  --bg-clr: var(--bg-clr-light);
  --txt-clr: var(--text-clr-dark);
  --txt-clr-hover: var(--txt-clr-hover-dark);
  --bg-clr-rev: var(--bg-clr-dark);
  --txt-clr-rev: var(--text-clr-dark);
  --txt-clr-hover-rev: var(--txt-clr-hover-light);
    --svg-align: var(--svg-stroke-b);
    --svg-rotate: var(--svg-rotate-b);
    --svg-upload: var(--svg-upload-b);
    --darkTogglePos-sun: var(--darkTogglePos-r);
    --darkToggleStroke-sun: var(--darkToggleStroke-b);
    --darkToggleStroke-sunChecked: var(--darkToggleStroke-w);
    --darkTogglePos-moon: var(--darkTogglePos-l);
    --darkToggleStroke-moon: var(--darkToggleStroke-w);
    --darkToggleStroke-moonChecked: var(--darkToggleStroke-b);
    @media (prefers-color-scheme: dark) {
        --bg-clr: var(--bg-clr-dark);
        --txt-clr: var(--text-clr-light);
        --txt-clr-hover: var(--txt-clr-hover-light);
        --bg-clr-rev: var(--bg-clr-light);
        --txt-clr-rev: var(--text-clr-dark);
        --txt-clr-rev-hover: var(--txt-clr-hover-dark);
        --svg-align: var(--svg-stroke-w);
        --svg-rotate: var(--svg-rotate-w);
        --svg-upload: var(--svg-upload-w);
        --darkTogglePos-sun: var(--darkTogglePos-l);
        --darkToggleStroke-sun: var(--darkToggleStroke-w);
        --darkToggleStroke-sunChecked: var(--darkToggleStroke-b);
        --darkTogglePos-moon: var(--darkTogglePos-r);
        --darkToggleStroke-moon: var(--darkToggleStroke-b);
        --darkToggleStroke-moonChecked: var(--darkToggleStroke-w);
    }

    --bg-clr-select_header: rgb(0 0 0 / .4);
  --border-rad: 0.4rem;
    /* box shadows */
    --box-shadow: 0 0.25 1rem rgb(0 0 0 / .5);
    --main-shadow: 0 5px 25px rgba(0, 0, 0, 0.4);
    --card-shadow:
    1px 0.6px 4.1px rgba(0, 0, 0, 0.018),
    2.4px 1.5px 10px rgba(0, 0, 0, 0.027),
    4.3px 2.7px 19px rgba(0, 0, 0, 0.034),
    7.4px 4.6px 33.3px rgba(0, 0, 0, 0.041),
    14px 8.7px 59px rgba(0, 0, 0, 0.05),
    37px 23px 126px rgba(0, 0, 0, 0.07);
    --button-shadow: 1px 1px 1px rgba(74, 74, 74, 0.3), -1px -1px 1px 0 rgba(255 2552 255 / .18);
    --button-hover-shadow: 4px 4px 5px -1px rgba(0,0,0,0.45);
    --button-pressed-shadow: inset 0 3px 5px -1px rgba(0 0 0 / .3), inset 0 -1px 2px -1px rgba(200 200 200   / .6);
  /* fonts */
  --font-sz-title: clamp(1.8rem, 2rem + 0.65vw, 2.2rem);
  --font-sz-main: clamp(1rem, 1.2rem + 0.65vw, 1.6rem);
  --font-sz-cards: clamp(.8rem, 1rem + 0.65vw, 1.2rem);
    --font-sz-ascii: clamp(.1rem, .3rem + 0.65vw, .4rem);
  --font-primary: 'Roboto', sans-serif;
  --font-secondary: 'Roboto', sans-serif;
  --font-accent: 'Kdam Thmor Pro', sans-serif;
  /* motion color racing */
  --mcr-yellow: rgb(226, 192, 68);
  --mcr-blue: rgb(31, 32, 65);
  --mcr-cyan: rgb(81, 163, 163);
  --mcr-red: rgb(159, 52, 45);
  --mcr-grad: linear-gradient(50deg, var(--mcr-red), var(--mcr-yellow), var(--mcr-cyan), var(--mcr-blue));
    /* select */
    --select-border: var(--mcr-cyan);
    --select-focus: var(--select-border);
    --select-arrow: var(--select-border);
    --button-rad: 20%;
    --border-clr: rgba(0,0,0,.2);
    /* colours for colorized text */
    --red: rgb(225 57 57);
    --green: rgb(74 213 74);
    --blue: rgb(53 86 193);
    --yellow: rgb(251 237 52);
}

html {
    color-scheme: dark light;
    font-size: 62.5%;
}

body {
  margin: 0 auto;
  background: var(--main-bg-grad);
  background-attachment: fixed;
  color: var(--text-clr-heading) ;
  font-family: var(--font-primary);
  font-size: var(--font-sz-main);
  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;  /* Firefox */
}
h1 {
    margin: 1rem 0;
}

.wrapper {
    height: 100dvh;
    overflow-y: scroll;
    overscroll-behavior-y: contain;
    scroll-snap-type: y mandatory;
    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none; /* Firefox */
}
.wrapper::-webkit-scrollbar {
    display: none;
}
main {
    height: 100%;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: start;
    background: var(--mcr-grad);
    padding: 1rem;
    border-radius: var(--border-rad);
    position: relative;
    top: 50%;
    transform: translateY(-50%);
    margin: auto;
}
.header {
    display: flex;
}
.header > a {
    font-size: var(--font-sz-title);
    font-weight: bolder;
}
.frosted {
    width: 100%;
    height: 95%;
    background: linear-gradient(135deg,
    rgba(255,255,255,0.1) 0%,
    rgba(233,253,255,0.2) 22%,
    rgba(255,255,255,0.05) 47%,
    rgba(230,255,255,0.2) 71%,
    rgba(255,255,255,0.1) 100%);
    border: 1px outset rgba(255, 255, 255, .4);
    box-shadow: var(--main-shadow);
    -webkit-backdrop-filter: blur(10px);
    backdrop-filter: blur(10px);
    padding: 1rem;
    border-radius: var(--border-rad);
}
.elements {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
}
.modifiers {
    width: 95%;
    display: flex;
    justify-content: space-evenly;
}

/*.elements {*/
/*    width: 100%;*/
/*    display: flex;*/
/*    flex-direction: column;*/
/*    align-items: center;*/
/*}*/

a {
  text-decoration: none!important;
  color: var(--txt-clr)
}

select {
    border-radius: 0;
    padding: .6rem;
}
.select {
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-items: center;
    background: var(--bg-clr);
}
.banner {
    padding: .4rem 1rem;
    cursor: pointer;
}
.banner:hover {
    color: var(--txt-clr-hover);
}

.submit {
    height: 3.3rem;
}
#generate {
    font-size: var(--font-sz-cards);
    padding: .5rem 1rem;
    height: 5.6rem;
}
textarea {
    color: var(--txt-clr);
}
.output {
    width: 95%;
}
#generator {
    /*width: 95%;*/
    display: flex;
    flex-direction: column;
}

/* ----------  form styling ----------*/
select, label, input {
    appearance: none;
    background-color: transparent;
    border: none;
    padding: 0;
    margin: 0;
    width: 100%;
    font-family: inherit;
    font-size: inherit;
    cursor: inherit;
    line-height: inherit;
    outline: none;
}
select, input {
    color: var(--txt-clr);
}
.label {
     padding: .4rem 1rem;
     border-radius: var(--border-rad) var(--border-rad) 0 0;
     background: var(--bg-clr-select_header);
     color: var(--text-clr-heading);
 }
input::file-selector-button {
    font-weight: bold;
    background: var(--txt-clr-hover-light);
    color: var(--txt-clr-rev);
    padding: 0.3em;
    border: thin solid grey;
    border-radius: 5px;
}
.card {
    display: flex;
    flex-direction: column;
    margin : 1rem 0;
    box-shadow: var(--card-shadow);
}
.textarea {
    height: 3.5rem;
    background: var(--bg-clr);
    padding: 0.5rem 1rem;
    color: var(--txt-clr);
}
/*input[type=file] {*/
/*    margin: 10px auto;*/
/*}*/
#browse {
    width: 75%;
    margin: 5px 0 0 0;
    text-align: center;
    display: none;
}
#fileSubmit {
    width: 100%;
    height: 28px;
}
.labelwbtn {
    padding: .4rem 1rem;
    color: var(--text-clr-heading);
}
.whiteLabel {
    display: flex;
    justify-content: space-between;
    padding: .5rem .5rem .3rem;
    background: var(--bg-clr);
}
.whiteLabel * {
    margin: 0 .5rem;
}
.inWhiteLabelContent {
    color: var(--txt-clr);
}
.whiteLabel:hover [class^="inWhiteLabel"]:nth-child(1) {
    color: var(--txt-clr-hover);
    cursor: pointer;
}
.whiteLabel:hover [class^="inWhiteLabel"]:nth-child(2):before {
    background-size: 16px 16px;
    transform: rotate(-180deg);
    transition: .3s ease;
}
.inWhiteLabelReset {
    position: relative;
    width: 24px;
    height: 24px;
    background: rgba(0 0 0 / 0);
    box-shadow: inset 0 1px 1px rgba(0 0 0 / .2), inset 0 3px 5px rgba(0 0 0 / .1), inset 0 -1px 1px rgba(225 225 225 / .3);
    border: 0;
    border-radius: 25px;
    cursor: pointer;
    transition: .3s ease;
}
.inWhiteLabelReset:before {
    content: "";
    position: absolute;
    width: 24px;
    height: 24px;
    top: -0px;
    left: -0px;
    background: rgba(0 0 0 / 0) var(--svg-rotate) no-repeat 5px 5px;
    background-size: 14px 14px;
    transition: .3s ease;
}
/*.reset:hover:before {*/
/*    !*top: -1px;*!*/
/*    !*left: -1px;*!*/
/*    background-size: 16px 16px;*/
/*    transform: rotate(-180deg);*/
/*    transition: .3s ease;*/
/*}*/
.buttonedLabel {
    display: flex;
    justify-content: space-between;
    height: 3.5rem;
    border-radius: var(--border-rad) var(--border-rad) 0 0;
    background: var(--bg-clr-select_header);
}
.buttonRow {
    display: flex;
    padding: 2px 0;
    background: var(--bg-clr);
    justify-content: space-evenly;
}
button {
    margin: .5rem 1rem;
}
.buttonRow input {
    /*background: radial-gradient(ellipse farthest-side at center center, #ffffff 50%, #f1f1f1 160%);*/
    background: var(--bg-clr);
    height: 24px;
    width: 5rem;
    margin: 2px 0 0 0;
    border-radius: 1rem;
    box-shadow: var(--button-shadow);
    cursor: pointer;
}
.darkToggle {
    width: 50px;
    height: 25px;
    margin: .5rem;
    position: relative;
    display: block;
    background: rgba(0 0 0 / 0);
    border-radius: 200px;
    box-shadow: inset 0 5px 15px rgba(0 0 0 / .4), inset 0 -1px 1px rgba(255 255 255 / .4);
    cursor: pointer;
    transition: .3s;
}
.darkToggle:after {
    content: "";
    width: 21px;
    height: 21px;
    position: absolute;
    top: 2px;
    left: 2px;
    background: linear-gradient(180deg, rgb(167, 214, 214), var(--mcr-cyan));
    border-radius: 23px;
    box-shadow: 0 2px 2px rgba(0 0 0 / .2);
    transition: .3s;
}
.darkToggle svg {
    position: absolute;
    top: 3px;
    z-index: 50
}
.darkToggle svg.sun {
    left: var(--darkTogglePos-sun);
    stroke: var(--darkToggleStroke-sun);
}
.darkToggle svg.moon {
    left: var(--darkTogglePos-moon);
    stroke: var(--darkToggleStroke-moon);
}
#darkmode-toggle:checked + .darkToggle svg.sun {
    stroke: var(--darkToggleStroke-sunChecked);
}
#darkmode-toggle:checked + .darkToggle svg.moon {
    stroke: var(--darkToggleStroke-moonChecked);
}
.buttonedLabel input {
    height: 0;
    width: 0;
    visibility: hidden;
}
.buttonedLabel input:checked + .darkToggle:after {
    left: 48px;
    transform: translateX(-100%);
}
.darkToggle:active:after {
    width: 32px;
}
.artput {
}
.autoscroll {
    overflow: auto
}
.asciiOut {
    display: flex;
    overflow: hidden;
    margin: 0;
    height: 100%;
    padding: 1rem;
    line-height: 1;
    width: auto;
    font-size: clamp(.8vw, .8rem + 1vw, 1.2vw);
    color: var(--txt-clr);
    background: var(--bg-clr);
    transition: .3s ease;
}
.asciiOutDark {
     overflow: hidden;
     margin: 0;
     height: 100%;
     padding: 1rem;
     line-height: 1;
     width: auto;
     color: var(--txt-clr-rev);
     background: var(--bg-clr-rev);
     transition: .3s ease;
 }
.left {
    justify-content: flex-start;
}.right {
    justify-content: flex-end;
}.center {
    justify-content: center;
}.justify {
    justify-content: space-between;
}

.justifyBlock {
    background: var(--bg-clr);
    color: var(--txt-clr);
    /*position: absolute;*/
    /*left: 25px;*/
}
.artsays {
    border-radius: 0 !important;
}
.toggle {
    background: var(--bg-clr);
    border: solid var(--bg-clr-select_header);
    border-width: 1px 0 1px 0;
    display: flex;
    justify-content: space-evenly;
    height: 4.3rem;
    padding: .5rem;
}
/*.toggle * {*/
/*    border: 1px dashed hotpink;*/
/*}*/
.modifiers {
    width: 100%;
    flex-direction: column;
    align-items: center;
}
.radio {
    display: block;
    position: relative;
    flex-shrink: 0;
    width: 31px;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}
.radio input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
}
/* colours for colorized text */
.redSelect {
    background: var(--red);
}
.red {
    color: var(--red);
}
.greenSelect {
    background: var(--green);
}
.green {
    color: var(--green);
}
.blueSelect {
    background: var(--blue);
}
.blue {
    color: var(--blue);
}
.yellowSelect {
    background: var(--yellow);
}
.yellow {
    color: var(--yellow);
}
.orangeSelect {
    background: orange;
}
.orange {
    color: orange;
}
.checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 3rem;
    width: 3rem;
    border-radius: var(--button-rad);
}
.checkmark svg, .checkmark2 svg {
    margin: 2px;
}
.checkmark svg.align {
    stroke: var(--svg-align);
}
.checkmark:hover svg.align {
    stroke: var(--txt-clr-hover);
}
.checkmark2 {
    position: absolute;
    top: 0;
    left: 0;
    opacity: .1;
    height: 3rem;
    width: 3rem;
    cursor: help;
    border-radius: var(--button-rad);
}
.checkmark2:hover {
    opacity: 1;

}
.checkmark2:hover:after {
    position: absolute;
    top: 0;
    left: -5rem;
    content: "Content must be left justified when using the colour option";
    text-align: justify;
    background: var(--bg-clr-rev);
    color: var(--txt-clr-rev);
    font-size: small;
    height: 5rem;
    width: 20rem;
    padding: .5rem;
    border-radius: var(--border-rad);
    border: outset 1px rgba(0 0 0 / .4);
    box-shadow: var(--button-hover-shadow);
    z-index: 100;
}
.colorToggle .radio input ~ .checkmark {
    opacity: .7;
}
.colorToggle .radio input:hover ~ .checkmark {
    opacity: 1;
}
.radio input:checked ~ .checkmark {
    border: 1px solid rgb(0 0 0 / .04);
    opacity: 1;
}
.radio input:checked ~ .checkmark svg.align {
    stroke: var(--txt-clr-hover);
}
.checkmark::after {
    content: "";
    position: absolute;
    display: none;
}
.radio input:checked ~ .checkmark::after {
    display: block;
}
.radio .checkmark::after {
    top: 0;
    transform: translateX(-2%) translateY(-3%);
    left: 0;
    width: 3rem;
    height: 3rem;
    border-radius: var(--button-rad);
    background: rgba(255,255,255,0);
    -webkit-box-shadow: var(--button-pressed-shadow);
    -moz-box-shadow: var(--button-pressed-shadow);
    box-shadow: var(--button-pressed-shadow);
}
#colorPicker {
    display: flex;
    flex-direction: column;
}
#upload {
    flex-direction: column;
}

/* submit button */
#submit-reverse {
    background: #fff;
    margin: 1rem;
    border: 1px solid var(--border-clr);
    border-radius: var(--border-rad);
}
#submit-reverse:hover {
    cursor: pointer;
    box-shadow: var(--button-hover-shadow);

}
#drop_zone {
    display: flex;
    justify-content: center;
    align-items: end;
    height: 10.3rem;
    font-size: var(--font-sz-cards);
    background: var(--bg-clr) var(--svg-upload) no-repeat center;
    border: 2px dashed var(--txt-clr);
    z-index: 999;
}
#drop_zone.active {
    border: 0;
    background: rgba(255, 127, 127, 0.51);
}
#drop_zone.dropped {
    background: var(--bg-clr);
}
#drop_zone span {
    padding: .5rem 0;
    color: var(--txt-clr);
}
#drop_zone .button {
    padding: .5rem .5rem;
    color: #5074b5;
    cursor: pointer;
}
#drop_zone p a:hover {
    color: var(--txt-clr-hover);
}
#drop_zone input {
    cursor: pointer;
}
#text_input {
    width: 100%;
    border-radius: var(--border-rad);
}
#color-txt {
    font-size: var(--font-sz-cards);
    padding: .5rem 1rem;
    color: var(--txt-clr);
}
.genascii {
    height: 2.8rem;
}
.genascii:hover {
    color: var(--text-clr-heading);
    background: color-mix(in lab, var(--mcr-red), var(--mcr-yellow) 15%) ;
    cursor: pointer;
}
.getText, .getText2 {
    display: none;
    background: var(--bg-clr);
    color: var(--txt-clr);
    z-index: -999;
}
.getText {
    position: absolute;
    bottom: -18px;
}
.getTextAppear {
    display: block;
    position: absolute;
    bottom: -18px;
    background: var(--mcr-cyan);
    color: var(--txt-clr);
    z-index: 999;
    animation: slide-in 500ms ease;
}
.getText2Appear {
    display: block;
    background: var(--mcr-cyan);
    color: var(--txt-clr);
    z-index: 999;
    animation: slide-in2 500ms ease;
}
@keyframes slide-in {
    0% {
        transform: translateY(-100%);
    }
    100% {
        transform: translateY(0%);
    }
}
@keyframes fade-in {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}
.fileOutputForm {
    width: 100%;
}
.fileOutput {
    display: flex;
    gap: 1rem;
    background: var(--mcr-cyan);
    height: 3.9rem;
    padding: .5rem;
}
.fileOutputCheck {
}
.fileOutputLabel {
    width: auto;
    flex-shrink: 0;
    padding: .5rem 0 0 1rem;
}
.fileOutputButton {
    width: 8rem;
    color: var(--txt-clr-hover-light);
    /*border: 1px solid var(--txt-clr);*/
    box-shadow: var(--button-shadow);
    border-radius: 1rem;
}
.fileOutputButton:active {
    box-shadow: var(--button-pressed-shadow);
}
@media only screen and (max-width: 600px) {
    .frontpage {
        height: 100%;
        scroll-snap-align: start;
    }

    .frosted {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-items: center;
    }

    form, .form {
        width: 95%;
        display: grid;
    }

    #gopher {
        display: none;
    }

    #generator, #colorPicker, #upload {
        animation: grow, fade-in 700ms ease;
        width: 100%;
    }

    .getText {
        position: relative;
    }

    @keyframes slide-in2 {
        0% {
            transform: translateY(-38px);
        }
        100% {
            transform: translateY(0);
        }
    }
    @keyframes grow {
        0% {
            transform: translateY(-100px);
        }
        100% {
            transform: translateY(0);
        }
    }
}
@media only screen and (min-width: 601px) {
    body {
        width: 95%;
        margin: 0 auto;
    }
    .frontpage {
        height: 95%;
        scroll-snap-align: start;
        position: relative;
        top: 50%;
        transform: translateY(-50%);
        margin: auto;
    }
    .frosted {
        display: flex;
        align-items: start;
        justify-content: center;
    }
    form, .form {
        width: 95%;
    }
    #gopher {
        display: none;
    }
    #generator, #colorPicker, #upload {
         width: 100%;
    }
}

@media only screen and (min-width: 768px) {
      .elements {
          display: grid;
          /*grid-template-columns: 4fr 4fr 4fr;*/
          grid-template-rows: 4fr 6fr 1fr;
          gap: 2rem 0;
          grid-template-areas:
          "mod"
          "art"
          "foot";
          justify-items: center;
          align-items: center;
      }
      #options {
          display: none;
      }
      .modifiers {
          width: 100%;
          grid-area: mod;
          display: grid;
          height: 100%;
          grid-template-columns: 4fr 4fr 4fr;
          gap: 2rem;
          grid-template-areas:
          "gen col up";
          justify-content: space-between;
          align-items: start;
      }
      #generator {
          grid-area: gen;
          /*width: 100%*/
      }
      #colorPicker {
          grid-area: col;
          /*width: 100%*/
      }
      #upload {
          grid-area: up;
          /*z-index: 0;*/
          /*width: 100%*/
      }
      .upload {
          backface-visibility: hidden;
          transform: rotate3d(0, 1, 0, -180deg);
          transition: .5s ease;
      }
    .uploadFlip {
        /*z-index: 1;*/
        transform: rotate3d(0, 1, 0, 0deg);
        transition: .5s ease;
    }
      #gopher {
          grid-area: up;
          display: flex;
          flex-direction: column;
      }
      .gopher {
          position: relative;
          width: 100%;
          height: 100%;
          backface-visibility: hidden;
          transition: .5s ease;
          cursor: pointer;
      }
      .gopher div {
          height: 100%;
      }
      .gopherFlip {
          /*z-index: 1;*/
          transform: rotate3d(0, 1, 0, 180deg);
          transition: .5s ease;
      }
      #gopher div {
          display: flex;
          margin: 1rem 0;
          height: 13.5rem;
          align-items: center;
          justify-content: space-around;
          width: 100%;
          background: var(--bg-clr);
          border: 2px dashed var(--txt-clr);
      }
      #gopher pre {
          color: var(--txt-clr);
          justify-content: center;
          font-size: var(--font-sz-ascii);
      }
      .thatguy {
          height: 5rem;
          width: 5rem;
          position: absolute;
          bottom: 4rem;
          right: 1rem;
      }
    .gopher-animation,
    .left-arm,
    .right-arm,
    .right-foot,
    .left-foot,
    .belly,
    .shadow,
    .left-eye,
    .right-eye,
    .mouth,
    .tongue {
        animation-duration: 5s;
        animation-iteration-count: infinite;
        animation-timing-function: linear;
    }
    .left-eye,
    .right-eye {
        animation-name: blink;
    }

    @keyframes blink {
        0%,
        6%,
        100% {
            visibility: hidden;
        }
        5% {
            visibility: visible;
        }
    }
      #do, #rev {
          display: grid;
          align-items: center;
          justify-items: center;
          width: 100%;
          height: 2.8rem;
          justify-self: center;
          margin: 0 0 1rem 0;
          color: var(--txt-clr);
          background: var(--bg-clr);
          border-radius: 0;
      }
      #do:hover, #rev:hover {
          cursor: pointer;
          color: var(--text-clr-heading);
          background: var(--mcr-cyan);
      }
      #do {
          grid-area: do;
      }
      .do {
          box-shadow: var(--button-shadow);
      }
      .do:active {
          box-shadow: var(--button-pressed-shadow);
      }
      #rev {
          grid-area: up;
          align-self: end;
      }
      .rev:after {
          content: "enable reverse";
      }
      .revPressed, .rev:active {
          box-shadow: var(--button-pressed-shadow);
      }
      .revPressed:after {
          content: "disable reverse";
      }
      #asciiout {
          grid-area: art;
          height: 100%;
      }
}

/* Large devices (laptops/desktops, 992px and up) */
@media only screen and (min-width: 992px) {

}

@media only screen and (min-width: 1080px) {
  .about {
      margin-left: 2.5rem;
  } 
}